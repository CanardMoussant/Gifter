# This is the main configuration file for the application.
# ~~~~~

# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions.
# If you deploy your application to several instances be sure to use the same key!
application.secret="TsLWj4[^1N<7nrI/>EkyPDTO[dnh<7_R[j;cN0:lGK6Mm`0048C@3PK]4KR6HobL"

# Database configuration
# ~~~~~ 
# You can declare as many datasources as you want.
# By convention, the default datasource is named `default`
#
db.default.url="jdbc:postgresql://localhost/gifter"
db.default.driver=org.postgresql.Driver
play.db.pool = bonecp
# db.default.user=sa
# db.default.password=""

application.global = "utils.PlayGlobalSettings"



# Logger
# ~~~~~
# You can also configure logback (http://logback.qos.ch/), by providing a logger.xml file in the conf directory .

# Root logger:
#logger=ERROR

# Logger used by the framework:
#logger.play=INFO

# Logger provided to your application:
logger.application=DEBUG

application.langs="fr"



silhouette {
  authenticator {
    session {
      sessionKey = "auth"
      encryptAuthenticator = true
      useFingerprinting = false
      authenticatorIdleTimeout = 600
      authenticatorExpiry = 600
    }
    cookie {
      name = "silhouette"
      path = "/"
      secure = false
      httpOnlyCookie=true
      
      useFingerprinting = false
      maxAge = 31536000 # One year in seconds
      idleTimeout = 1800 # One year in seconds
      expiry = 31536000 # One year in seconds
    }
  }

  oauth1TokenSecretProvider {
    cookieName = "silhouette_oauth1"
    cookiePath = "/"
    cookieDomain = "127.0.0.1"
    secureCookie = false
    httpOnlyCookie = true
    expirationTime = 600
  }
  
  oauth2StateProvider {
  	cookieName="OAuth2State"
  	cookiePath="/"
  	secureCookie=false // Disabled for testing on localhost without SSL, otherwise cookie couldn't be set
  	httpOnlyCookie=true
  	expirationTime=600
  }


  google {
    authorizationUrl = "https://accounts.google.com/o/oauth2/auth"
    accessTokenUrl = "https://accounts.google.com/o/oauth2/token"
    redirectUrl = "http://localhost:9000/signin/google"
    clientId = ${?GOOGLE_CLIENT_ID}
    clientSecret = ${?GOOGLE_CLIENT_SECRET}
    scope = "email profile"
  }


  # Facebook provider
  facebook {
  	authorizationUrl="https://graph.facebook.com/v2.3/oauth/authorize"
  	accessTokenUrl="https://graph.facebook.com/v2.3/oauth/access_token"
  	redirectUrl="http://localhost:9000/authenticate/facebook"
  	clientId=""
  	clientId=${?FACEBOOK_CLIENT_ID}
  	clientSecret=""
  	clientSecret=${?FACEBOOK_CLIENT_SECRET}
  	scope="email"
  }


  # Twitter provider
  twitter {
  	requestTokenUrl="https://twitter.com/oauth/request_token"
  	accessTokenUrl="https://twitter.com/oauth/access_token"
  	authorizationUrl="https://twitter.com/oauth/authenticate"
  	callbackUrl="http://localhost:9000/authenticate/twitter"
  	consumerKey=""
  	consumerKey=${?TWITTER_CONSUMER_KEY}
  	consumerSecret=""
  	consumerSecret=${?TWITTER_CONSUMER_SECRET}
  }
}
